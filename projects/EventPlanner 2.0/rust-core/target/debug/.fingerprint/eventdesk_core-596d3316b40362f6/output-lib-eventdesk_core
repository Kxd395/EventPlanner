{"$message_type":"diagnostic","message":"unused variable: `event_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":14256,"byte_end":14264,"line_start":342,"line_end":342,"column_start":30,"column_end":38,"is_primary":true,"text":[{"text":"        let (cur_status_txt, event_id): (String, String) = tx","highlight_start":30,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":14256,"byte_end":14264,"line_start":342,"line_end":342,"column_start":30,"column_end":38,"is_primary":true,"text":[{"text":"        let (cur_status_txt, event_id): (String, String) = tx","highlight_start":30,"highlight_end":38}],"label":null,"suggested_replacement":"_event_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `event_id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:342:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m342\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let (cur_status_txt, event_id): (String, String) = tx\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_event_id`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `rowsImported` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":8074,"byte_end":8086,"line_start":220,"line_end":220,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        pub rowsImported: u64,","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":8074,"byte_end":8086,"line_start":220,"line_end":220,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        pub rowsImported: u64,","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"rows_imported","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rowsImported` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:220:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub rowsImported: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `rows_imported`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `rowsErrored` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":8105,"byte_end":8116,"line_start":221,"line_end":221,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        pub rowsErrored: u64,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":8105,"byte_end":8116,"line_start":221,"line_end":221,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        pub rowsErrored: u64,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"rows_errored","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rowsErrored` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:221:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m221\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub rowsErrored: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `rows_errored`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `attendeeId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":19482,"byte_end":19492,"line_start":454,"line_end":454,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        pub attendeeId: String,","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":19482,"byte_end":19492,"line_start":454,"line_end":454,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        pub attendeeId: String,","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":"attendee_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attendeeId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:454:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m454\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub attendeeId: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attendee_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `memberId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":19514,"byte_end":19522,"line_start":455,"line_end":455,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        pub memberId: String,","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":19514,"byte_end":19522,"line_start":455,"line_end":455,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        pub memberId: String,","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"member_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `memberId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:455:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m455\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub memberId: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `member_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `eventId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":19544,"byte_end":19551,"line_start":456,"line_end":456,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        pub eventId: String,","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":19544,"byte_end":19551,"line_start":456,"line_end":456,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        pub eventId: String,","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"event_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `eventId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:456:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m456\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub eventId: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `event_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `checkedInAt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":19699,"byte_end":19710,"line_start":461,"line_end":461,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        pub checkedInAt: Option<String>,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":19699,"byte_end":19710,"line_start":461,"line_end":461,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        pub checkedInAt: Option<String>,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"checked_in_at","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `checkedInAt` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:461:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m461\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub checkedInAt: Option<String>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `checked_in_at`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `firstName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22707,"byte_end":22716,"line_start":515,"line_end":515,"column_start":75,"column_end":84,"is_primary":true,"text":[{"text":"    pub struct MemberRow { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }","highlight_start":75,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":22707,"byte_end":22716,"line_start":515,"line_end":515,"column_start":75,"column_end":84,"is_primary":true,"text":[{"text":"    pub struct MemberRow { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }","highlight_start":75,"highlight_end":84}],"label":null,"suggested_replacement":"first_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `firstName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:515:75\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m515\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mg, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `first_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `lastName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22730,"byte_end":22738,"line_start":515,"line_end":515,"column_start":98,"column_end":106,"is_primary":true,"text":[{"text":"    pub struct MemberRow { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }","highlight_start":98,"highlight_end":106}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":22730,"byte_end":22738,"line_start":515,"line_end":515,"column_start":98,"column_end":106,"is_primary":true,"text":[{"text":"    pub struct MemberRow { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }","highlight_start":98,"highlight_end":106}],"label":null,"suggested_replacement":"last_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `lastName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:515:98\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m515\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mtring>, pub firstName: String, pub lastName: String, pub company: Option<String> }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `last_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `attendanceId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":23761,"byte_end":23773,"line_start":533,"line_end":533,"column_start":35,"column_end":47,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":35,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":23761,"byte_end":23773,"line_start":533,"line_end":533,"column_start":35,"column_end":47,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":35,"highlight_end":47}],"label":null,"suggested_replacement":"attendance_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attendanceId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:533:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attendance_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `memberId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":23787,"byte_end":23795,"line_start":533,"line_end":533,"column_start":61,"column_end":69,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":61,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":23787,"byte_end":23795,"line_start":533,"line_end":533,"column_start":61,"column_end":69,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":61,"highlight_end":69}],"label":null,"suggested_replacement":"member_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `memberId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:533:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `member_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `eventId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":23809,"byte_end":23816,"line_start":533,"line_end":533,"column_start":83,"column_end":90,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":83,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":23809,"byte_end":23816,"line_start":533,"line_end":533,"column_start":83,"column_end":90,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":83,"highlight_end":90}],"label":null,"suggested_replacement":"event_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `eventId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:533:83\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m533\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `event_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `startsAt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":28322,"byte_end":28330,"line_start":609,"line_end":609,"column_start":65,"column_end":73,"is_primary":true,"text":[{"text":"    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<String>, pub timezone: Option<String>, pub description: Option<String> }","highlight_start":65,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28322,"byte_end":28330,"line_start":609,"line_end":609,"column_start":65,"column_end":73,"is_primary":true,"text":[{"text":"    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<String>, pub timezone: Option<String>, pub description: Option<String> }","highlight_start":65,"highlight_end":73}],"label":null,"suggested_replacement":"starts_at","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `startsAt` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:609:65\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m609\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub c\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `starts_at`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `endsAt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":28344,"byte_end":28350,"line_start":609,"line_end":609,"column_start":87,"column_end":93,"is_primary":true,"text":[{"text":"    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<String>, pub timezone: Option<String>, pub description: Option<String> }","highlight_start":87,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":28344,"byte_end":28350,"line_start":609,"line_end":609,"column_start":87,"column_end":93,"is_primary":true,"text":[{"text":"    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<String>, pub timezone: Option<String>, pub description: Option<String> }","highlight_start":87,"highlight_end":93}],"label":null,"suggested_replacement":"ends_at","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `endsAt` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:609:87\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m609\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0me: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<Strin\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ends_at`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `firstName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":31942,"byte_end":31951,"line_start":658,"line_end":658,"column_start":79,"column_end":88,"is_primary":true,"text":[{"text":"    pub struct MemberProfile { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }","highlight_start":79,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":31942,"byte_end":31951,"line_start":658,"line_end":658,"column_start":79,"column_end":88,"is_primary":true,"text":[{"text":"    pub struct MemberProfile { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }","highlight_start":79,"highlight_end":88}],"label":null,"suggested_replacement":"first_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `firstName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:658:79\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m658\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mg, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `first_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `lastName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":31965,"byte_end":31973,"line_start":658,"line_end":658,"column_start":102,"column_end":110,"is_primary":true,"text":[{"text":"    pub struct MemberProfile { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }","highlight_start":102,"highlight_end":110}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":31965,"byte_end":31973,"line_start":658,"line_end":658,"column_start":102,"column_end":110,"is_primary":true,"text":[{"text":"    pub struct MemberProfile { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }","highlight_start":102,"highlight_end":110}],"label":null,"suggested_replacement":"last_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `lastName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:658:102\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m658\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mtring>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `last_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `attendanceId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":34318,"byte_end":34330,"line_start":697,"line_end":697,"column_start":46,"column_end":58,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":46,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":34318,"byte_end":34330,"line_start":697,"line_end":697,"column_start":46,"column_end":58,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":46,"highlight_end":58}],"label":null,"suggested_replacement":"attendance_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attendanceId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:697:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Opti\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attendance_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `priorStatus` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":34343,"byte_end":34354,"line_start":697,"line_end":697,"column_start":71,"column_end":82,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":71,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":34343,"byte_end":34354,"line_start":697,"line_end":697,"column_start":71,"column_end":82,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":71,"highlight_end":82}],"label":null,"suggested_replacement":"prior_status","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `priorStatus` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:697:71\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mg, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<S\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `prior_status`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `newStatus` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":34376,"byte_end":34385,"line_start":697,"line_end":697,"column_start":104,"column_end":113,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":104,"highlight_end":113}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":34376,"byte_end":34385,"line_start":697,"line_end":697,"column_start":104,"column_end":113,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":104,"highlight_end":113}],"label":null,"suggested_replacement":"new_status","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `newStatus` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:697:104\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_status`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `changedBy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":34426,"byte_end":34435,"line_start":697,"line_end":697,"column_start":154,"column_end":163,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":154,"highlight_end":163}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":34426,"byte_end":34435,"line_start":697,"line_end":697,"column_start":154,"column_end":163,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":154,"highlight_end":163}],"label":null,"suggested_replacement":"changed_by","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `changedBy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:697:154\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `changed_by`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `changedAt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":34457,"byte_end":34466,"line_start":697,"line_end":697,"column_start":185,"column_end":194,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":185,"highlight_end":194}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":34457,"byte_end":34466,"line_start":697,"line_end":697,"column_start":185,"column_end":194,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":185,"highlight_end":194}],"label":null,"suggested_replacement":"changed_at","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `changedAt` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:697:185\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mub changedBy: Option<String>, pub changedAt:String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `changed_at`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"21 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 21 warnings emitted\u001b[0m\n\n"}
