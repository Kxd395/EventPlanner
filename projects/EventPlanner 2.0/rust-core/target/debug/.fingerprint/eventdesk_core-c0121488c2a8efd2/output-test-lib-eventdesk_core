{"$message_type":"diagnostic","message":"unused imports: `auto_rollover_due` and `normalize_status_str`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":75985,"byte_end":76005,"line_start":1473,"line_end":1473,"column_start":23,"column_end":43,"is_primary":true,"text":[{"text":"    use super::util::{normalize_status_str, auto_rollover_due};","highlight_start":23,"highlight_end":43}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":76007,"byte_end":76024,"line_start":1473,"line_end":1473,"column_start":45,"column_end":62,"is_primary":true,"text":[{"text":"    use super::util::{normalize_status_str, auto_rollover_due};","highlight_start":45,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":75967,"byte_end":76026,"line_start":1473,"line_end":1473,"column_start":5,"column_end":64,"is_primary":true,"text":[{"text":"    use super::util::{normalize_status_str, auto_rollover_due};","highlight_start":5,"highlight_end":64}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `auto_rollover_due` and `normalize_status_str`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:1473:23\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1473\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::util::{normalize_status_str, auto_rollover_due};\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":8799,"byte_end":8807,"line_start":232,"line_end":232,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        let mut stmt = conn.prepare(\"SELECT COUNT(*) FROM event_attendance WHERE event_id=?1 AND status_v2 IS NULL\");","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":8799,"byte_end":8803,"line_start":232,"line_end":232,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut stmt = conn.prepare(\"SELECT COUNT(*) FROM event_attendance WHERE event_id=?1 AND status_v2 IS NULL\");","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:232:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m232\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut stmt = conn.prepare(\"SELECT COUNT(*) FROM event_attendance WHERE event_id=?1 AND status_v2 IS NULL\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `event_id`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":15829,"byte_end":15837,"line_start":374,"line_end":374,"column_start":30,"column_end":38,"is_primary":true,"text":[{"text":"        let (cur_status_txt, event_id): (String, String) = tx","highlight_start":30,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":15829,"byte_end":15837,"line_start":374,"line_end":374,"column_start":30,"column_end":38,"is_primary":true,"text":[{"text":"        let (cur_status_txt, event_id): (String, String) = tx","highlight_start":30,"highlight_end":38}],"label":null,"suggested_replacement":"_event_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `event_id`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:374:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m374\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let (cur_status_txt, event_id): (String, String) = tx\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_event_id`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `rowsImported` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":9524,"byte_end":9536,"line_start":250,"line_end":250,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        pub rowsImported: u64,","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":9524,"byte_end":9536,"line_start":250,"line_end":250,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        pub rowsImported: u64,","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"rows_imported","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rowsImported` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:250:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub rowsImported: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `rows_imported`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `rowsErrored` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":9555,"byte_end":9566,"line_start":251,"line_end":251,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        pub rowsErrored: u64,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":9555,"byte_end":9566,"line_start":251,"line_end":251,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        pub rowsErrored: u64,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"rows_errored","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `rowsErrored` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:251:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub rowsErrored: u64,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `rows_errored`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `attendeeId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22420,"byte_end":22430,"line_start":514,"line_end":514,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        pub attendeeId: String,","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":22420,"byte_end":22430,"line_start":514,"line_end":514,"column_start":13,"column_end":23,"is_primary":true,"text":[{"text":"        pub attendeeId: String,","highlight_start":13,"highlight_end":23}],"label":null,"suggested_replacement":"attendee_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attendeeId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:514:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m514\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub attendeeId: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attendee_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `memberId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22452,"byte_end":22460,"line_start":515,"line_end":515,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        pub memberId: String,","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":22452,"byte_end":22460,"line_start":515,"line_end":515,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"        pub memberId: String,","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"member_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `memberId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:515:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m515\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub memberId: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `member_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `eventId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22482,"byte_end":22489,"line_start":516,"line_end":516,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        pub eventId: String,","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":22482,"byte_end":22489,"line_start":516,"line_end":516,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"        pub eventId: String,","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"event_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `eventId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:516:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m516\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub eventId: String,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `event_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `checkedInAt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":22637,"byte_end":22648,"line_start":521,"line_end":521,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        pub checkedInAt: Option<String>,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":22637,"byte_end":22648,"line_start":521,"line_end":521,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        pub checkedInAt: Option<String>,","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"checked_in_at","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `checkedInAt` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:521:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m521\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        pub checkedInAt: Option<String>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `checked_in_at`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `firstName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":25645,"byte_end":25654,"line_start":575,"line_end":575,"column_start":75,"column_end":84,"is_primary":true,"text":[{"text":"    pub struct MemberRow { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }","highlight_start":75,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25645,"byte_end":25654,"line_start":575,"line_end":575,"column_start":75,"column_end":84,"is_primary":true,"text":[{"text":"    pub struct MemberRow { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }","highlight_start":75,"highlight_end":84}],"label":null,"suggested_replacement":"first_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `firstName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:575:75\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m575\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mg, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `first_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `lastName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":25668,"byte_end":25676,"line_start":575,"line_end":575,"column_start":98,"column_end":106,"is_primary":true,"text":[{"text":"    pub struct MemberRow { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }","highlight_start":98,"highlight_end":106}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":25668,"byte_end":25676,"line_start":575,"line_end":575,"column_start":98,"column_end":106,"is_primary":true,"text":[{"text":"    pub struct MemberRow { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String> }","highlight_start":98,"highlight_end":106}],"label":null,"suggested_replacement":"last_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `lastName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:575:98\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m575\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mtring>, pub firstName: String, pub lastName: String, pub company: Option<String> }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `last_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `attendanceId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":26699,"byte_end":26711,"line_start":593,"line_end":593,"column_start":35,"column_end":47,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":35,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":26699,"byte_end":26711,"line_start":593,"line_end":593,"column_start":35,"column_end":47,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":35,"highlight_end":47}],"label":null,"suggested_replacement":"attendance_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attendanceId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:593:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m593\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attendance_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `memberId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":26725,"byte_end":26733,"line_start":593,"line_end":593,"column_start":61,"column_end":69,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":61,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":26725,"byte_end":26733,"line_start":593,"line_end":593,"column_start":61,"column_end":69,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":61,"highlight_end":69}],"label":null,"suggested_replacement":"member_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `memberId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:593:61\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m593\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `member_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `eventId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":26747,"byte_end":26754,"line_start":593,"line_end":593,"column_start":83,"column_end":90,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":83,"highlight_end":90}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":26747,"byte_end":26754,"line_start":593,"line_end":593,"column_start":83,"column_end":90,"is_primary":true,"text":[{"text":"    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }","highlight_start":83,"highlight_end":90}],"label":null,"suggested_replacement":"event_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `eventId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:593:83\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m593\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct WalkinResult { pub attendanceId: String, pub memberId: String, pub eventId: String, pub status: String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `event_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `startsAt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":31428,"byte_end":31436,"line_start":671,"line_end":671,"column_start":65,"column_end":73,"is_primary":true,"text":[{"text":"    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<String>, pub timezone: Option<String>, pub description: Option<String> }","highlight_start":65,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":31428,"byte_end":31436,"line_start":671,"line_end":671,"column_start":65,"column_end":73,"is_primary":true,"text":[{"text":"    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<String>, pub timezone: Option<String>, pub description: Option<String> }","highlight_start":65,"highlight_end":73}],"label":null,"suggested_replacement":"starts_at","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `startsAt` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:671:65\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m671\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub c\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `starts_at`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `endsAt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":31450,"byte_end":31456,"line_start":671,"line_end":671,"column_start":87,"column_end":93,"is_primary":true,"text":[{"text":"    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<String>, pub timezone: Option<String>, pub description: Option<String> }","highlight_start":87,"highlight_end":93}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":31450,"byte_end":31456,"line_start":671,"line_end":671,"column_start":87,"column_end":93,"is_primary":true,"text":[{"text":"    pub struct EventRow { pub id: String, pub name: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<String>, pub timezone: Option<String>, pub description: Option<String> }","highlight_start":87,"highlight_end":93}],"label":null,"suggested_replacement":"ends_at","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `endsAt` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:671:87\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m671\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0me: String, pub startsAt: String, pub endsAt: String, pub location: Option<String>, pub capacity: Option<i64>, pub status: Option<Strin\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `ends_at`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `firstName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":35048,"byte_end":35057,"line_start":720,"line_end":720,"column_start":79,"column_end":88,"is_primary":true,"text":[{"text":"    pub struct MemberProfile { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }","highlight_start":79,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":35048,"byte_end":35057,"line_start":720,"line_end":720,"column_start":79,"column_end":88,"is_primary":true,"text":[{"text":"    pub struct MemberProfile { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }","highlight_start":79,"highlight_end":88}],"label":null,"suggested_replacement":"first_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `firstName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:720:79\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m720\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mg, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `first_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `lastName` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":35071,"byte_end":35079,"line_start":720,"line_end":720,"column_start":102,"column_end":110,"is_primary":true,"text":[{"text":"    pub struct MemberProfile { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }","highlight_start":102,"highlight_end":110}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":35071,"byte_end":35079,"line_start":720,"line_end":720,"column_start":102,"column_end":110,"is_primary":true,"text":[{"text":"    pub struct MemberProfile { pub id: String, pub email: Option<String>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }","highlight_start":102,"highlight_end":110}],"label":null,"suggested_replacement":"last_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `lastName` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:720:102\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m720\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mtring>, pub firstName: String, pub lastName: String, pub company: Option<String>, pub events: Vec<(String,String,String)> }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `last_name`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `attendanceId` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":40176,"byte_end":40188,"line_start":832,"line_end":832,"column_start":46,"column_end":58,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":46,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":40176,"byte_end":40188,"line_start":832,"line_end":832,"column_start":46,"column_end":58,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":46,"highlight_end":58}],"label":null,"suggested_replacement":"attendance_id","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `attendanceId` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:832:46\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Opti\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `attendance_id`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `priorStatus` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":40201,"byte_end":40212,"line_start":832,"line_end":832,"column_start":71,"column_end":82,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":71,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":40201,"byte_end":40212,"line_start":832,"line_end":832,"column_start":71,"column_end":82,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":71,"highlight_end":82}],"label":null,"suggested_replacement":"prior_status","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `priorStatus` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:832:71\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mg, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<S\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `prior_status`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `newStatus` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":40234,"byte_end":40243,"line_start":832,"line_end":832,"column_start":104,"column_end":113,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":104,"highlight_end":113}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":40234,"byte_end":40243,"line_start":832,"line_end":832,"column_start":104,"column_end":113,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":104,"highlight_end":113}],"label":null,"suggested_replacement":"new_status","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `newStatus` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:832:104\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `new_status`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `changedBy` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":40284,"byte_end":40293,"line_start":832,"line_end":832,"column_start":154,"column_end":163,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":154,"highlight_end":163}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":40284,"byte_end":40293,"line_start":832,"line_end":832,"column_start":154,"column_end":163,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":154,"highlight_end":163}],"label":null,"suggested_replacement":"changed_by","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `changedBy` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:832:154\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `changed_by`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"structure field `changedAt` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":40315,"byte_end":40324,"line_start":832,"line_end":832,"column_start":185,"column_end":194,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":185,"highlight_end":194}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":40315,"byte_end":40324,"line_start":832,"line_end":832,"column_start":185,"column_end":194,"is_primary":true,"text":[{"text":"    pub struct AuditRow { pub id:String, pub attendanceId:String, pub priorStatus: Option<String>, pub newStatus:String, pub reason: Option<String>, pub changedBy: Option<String>, pub changedAt:String }","highlight_start":185,"highlight_end":194}],"label":null,"suggested_replacement":"changed_at","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: structure field `changedAt` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:832:185\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m832\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0mub changedBy: Option<String>, pub changedAt:String }\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: convert the identifier to snake case: `changed_at`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"23 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 23 warnings emitted\u001b[0m\n\n"}
